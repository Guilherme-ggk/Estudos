<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>