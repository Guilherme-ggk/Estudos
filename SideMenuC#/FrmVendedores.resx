<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        j82sHCwAAAAASUVORK5CYII=
</value>
  </data>
</root>