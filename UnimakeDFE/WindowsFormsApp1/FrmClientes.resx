<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAOsAAADrASts18IAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAEbUlEQVRYR8VWf0wbZRiuiWbKEs3izDJDZqIDiZn7wy3ionFDItuYQ2fB6OIUxFQn2LAobWUYyP4a
        4GQKYTtox69emYlZskSjRh0/FNBRZLRMIwNKcAyHk9FCS69X7vG+69dyLYVSGPNJnnz97nvf93nuvve7
        q2KlSM08XLr7kIo7kJOPdHWBnzMZ6oJWZe7R7TRs9fD8wbdm01RH5OJy8ul5hbto6K3BvrfV23a/oRrd
        r8pzK3N1SH41Ey+9+0E4cYlKdcGfYtodvuxbgJRDKvsL2eqAQCQDhC/nHH2Ipq8Me7Pef4wIHnhPEyi+
        FAMZuR8/TkusDKmZ6j1EUJmrDRT/Xw1kFxxDyuvZWKQJJS7ZQLG5OEZn0a3zk8zpkoQXVTmJya/5tiD7
        o2K0d/yA2qY67Ms6HLQtIeSVR3QP0xILI9+sy8g3awWRkFHQdGnSaYgCvY1pgsU4JQx/D1xrB6aGFqUw
        9C3EeAd6TftpiYWh6dIVh4hLJNdpiGLWYmTFgvAb4CcHwNQyQaJMbbV0XWYAJI+WWBihBsovV6LEWh5q
        wCA34Jm4gqKSkiADRaXHwU30BxvobdTTEguDCBFBIvz5HwxsDjvK+j6Dxqw7RkMUsJ59ZNbK1uOvlv6l
        bAFGLnRK8RY2cg8QA0SQCNscDsmI72loRnRdwU2E8e5yXPvZJzIp3u3VDt9vMpL5nIlXaEpk+Leg1HpS
        onw7NF3aVhomAde738FoG+AYBCZ+B9pOALZm30jmfgOO4R00JTJCeyAgbtaeoCEBAM13Y6ydx0SfT2hE
        NNNj9I1+8ekhmxh3J02JDPG4pYmCXIgB7sNubdgjhBu/aTHWIcB+ZU50jm5MDybT0NUDBr6pFZvRi5tW
        QdqOqUEBN6zXMdKeRUNWF+ioKEPzcQhWE4TLX4gjKx078YWlpCHRA82frCek00Ux1qavkAyQd4OMfZ1f
        vUlDogdayzzCpfphOp2H2E9xTyzDFW2q4SxbDK5Z5nwbvD31krDHwiK96ar3wWpOSDI6u59jncXJZ93x
        NHVpwAXfHdFpALE13NaNDNcdp+emdzTMQCweYN6XA96+tnN4qm7Sk2BwB60RJrPOHnEs2tUwtYWWWxjh
        DMSd8SSureK9T9QFCy+TNeI5nv8XTTxWhfjHzEvd7BjgMW3bQ65vbcDadad4x6Nh7mzZNDr3SqJyYPxi
        C/7tFT8yneIr9Sdg9Jcz5PoGhuvdcNoTvtDyWSiJyhHOwKZqz8l7q3g8a3Th6QYXnml0hSsWkdvr5+UF
        vrABhBoY6r/0XUwlLySKwiRps96NBIMLKSZ71FxT6Y3eAPvrwOyTMudKth2l58uAiwlRM6ZyXv+EMSA2
        oTBu9pImdN20IfNruzzBnmFqGV9VAwQbGXfLA6c8iBc7frOe8wd7k1hnagb74/BtM7BTDNpp9AUnsS41
        WbstBmKrOdN9VbIjZ3JW0yXJXJwh8FSi4pqKJTQhQTyD9fef5v+ON3AzSU1O/TYGd9GlVTKgUPwHYIbX
        Yu4GesoAAAAASUVORK5CYII=
</value>
  </data>
</root>